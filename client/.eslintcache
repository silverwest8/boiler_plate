[{"/Users/choeeunseo/Desktop/boiler_plate/client/src/index.js":"1","/Users/choeeunseo/Desktop/boiler_plate/client/src/reportWebVitals.js":"2","/Users/choeeunseo/Desktop/boiler_plate/client/src/App.js":"3","/Users/choeeunseo/Desktop/boiler_plate/client/src/components/view/LandingPage/LandingPage.js":"4","/Users/choeeunseo/Desktop/boiler_plate/client/src/components/view/LoginPage/LoginPage.js":"5","/Users/choeeunseo/Desktop/boiler_plate/client/src/components/view/RegisterPage/RegisterPage.js":"6","/Users/choeeunseo/Desktop/boiler_plate/client/src/_reducers/index.js":"7","/Users/choeeunseo/Desktop/boiler_plate/client/src/_actions/user_action.js":"8","/Users/choeeunseo/Desktop/boiler_plate/client/src/_actions/types.js":"9","/Users/choeeunseo/Desktop/boiler_plate/client/src/_reducers/user_reducer.js":"10"},{"size":1026,"mtime":1612367482770,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1611331020465,"results":"13","hashOfConfig":"12"},{"size":1005,"mtime":1612251613081,"results":"14","hashOfConfig":"12"},{"size":900,"mtime":1612437452372,"results":"15","hashOfConfig":"12"},{"size":1934,"mtime":1612374280779,"results":"16","hashOfConfig":"12"},{"size":2745,"mtime":1612376503803,"results":"17","hashOfConfig":"12"},{"size":155,"mtime":1612371524406,"results":"18","hashOfConfig":"12"},{"size":717,"mtime":1612375901750,"results":"19","hashOfConfig":"12"},{"size":85,"mtime":1612375417923,"results":"20","hashOfConfig":"12"},{"size":465,"mtime":1612375897902,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"rgvy3d",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Users/choeeunseo/Desktop/boiler_plate/client/src/index.js",[],["47","48"],"/Users/choeeunseo/Desktop/boiler_plate/client/src/reportWebVitals.js",[],"/Users/choeeunseo/Desktop/boiler_plate/client/src/App.js",["49"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport LandingPage from './components/view/LandingPage/LandingPage'\nimport LoginPage from './components/view/LoginPage/LoginPage'\nimport RegisterPage from './components/view/RegisterPage/RegisterPage'\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage}>\n          </Route>\n          <Route exact path=\"/LoginPage\" component={LoginPage}>\n          </Route>\n          <Route exact path=\"/RegisterPage\" component={RegisterPage}>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/choeeunseo/Desktop/boiler_plate/client/src/components/view/LandingPage/LandingPage.js",[],"/Users/choeeunseo/Desktop/boiler_plate/client/src/components/view/LoginPage/LoginPage.js",[],"/Users/choeeunseo/Desktop/boiler_plate/client/src/components/view/RegisterPage/RegisterPage.js",["50","51"],"import Axios from 'axios';\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { registerUser } from '../../../_actions/user_action'\n\nfunction RegisterPage(props) {\n\n    const [Name, setName] = useState(\"\");\n    const [Email, setEmail] = useState(\"\");\n    const [Password, setPassword] = useState(\"\");\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\n\n\n    const onNameHandler = (event) => {\n        setName(event.currentTarget.value);\n    }\n    const onEmailHandler = (event) => {\n        setEmail(event.currentTarget.value);\n    }\n    const onPasswordHandler = (event) => {\n        setPassword(event.currentTarget.value);\n    }\n    const onConfirmPasswordHandler = (event) => {\n        setConfirmPassword(event.currentTarget.value);\n    }\n\n    const dispatch = useDispatch();\n\n\n    const onSubmitHandler = (event) => {\n        event.preventDefault(); //리프레시 방지\n\n        if (Password != ConfirmPassword) {\n            return alert('비밀번호와 비밀번호 확인은 같아야 합니다.');\n        } \n        let body = {\n            name: Name,\n            email: Email,\n            password: Password\n        }\n        // console.log('Email', Email);\n        // console.log('Password', Password);\n\n        //서버로 보내기 위해 디스패치 -> Axios 사용 (Action)\n        \n        //만약 redux를 안썼다면?\n        // Axios.post('/api/user/register', body);\n\n        dispatch(registerUser(body))\n        .then(response => {\n            if(response.payload.registerSuccess) {\n                props.history.push('/loginPage');\n            } else {\n                alert(\"Failed to sign up\");\n            }\n        })\n    }\n\n\n    return (\n        <div style = {{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100vh'}}>\n            \n            {/* <h2>Register</h2> */}\n\n            <form\n                style = {{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}\n                onSubmit = {onSubmitHandler} >\n\n                <label>Name</label>\n                <input type='text' value={Name} onChange={onNameHandler}/>\n\n                <label>Email</label>\n                <input type='email' value={Email} onChange={onEmailHandler}/>\n\n                <label>Password</label>\n                <input type='password' value={Password} onChange={onPasswordHandler}/>\n\n                <label>Confirm Password</label>\n                <input type='password' value={ConfirmPassword} onChange={onConfirmPasswordHandler}/>\n\n                <button type='submit'> 회원가입 </button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default RegisterPage","/Users/choeeunseo/Desktop/boiler_plate/client/src/_reducers/index.js",[],"/Users/choeeunseo/Desktop/boiler_plate/client/src/_actions/user_action.js",["52","53"],"import Axios from 'axios';\nimport {\n    LOGIN_USER, REGISTER_USER\n} from '../_actions/types'\n\nexport function loginUser(dataToSubmit) {\n    const request = Axios.post('/api/user/login', dataToSubmit) //서버에 request 날리기\n        .then(response => response.data )    //서버에서 받은 data를 request에 저장\n\n    return { //request를 reducer 로 보내기 (이전스테이트 + 액션 => 다음스테이트)\n        type: \"LOGIN_USER\",\n        payload: request\n    }\n}\n\nexport function registerUser(dataToSubmit) {\n    const request = Axios.post('/api/user/register', dataToSubmit)\n        .then(response => response.data )\n\n    return {\n        type: \"REGISTER_USER\",\n        payload: request\n    }\n}","/Users/choeeunseo/Desktop/boiler_plate/client/src/_actions/types.js",[],"/Users/choeeunseo/Desktop/boiler_plate/client/src/_reducers/user_reducer.js",["54","55","56"],"import {\n    LOGIN_USER, REGISTER_USER\n} from '../_actions/types'\n//다른 타입이 올때마다 다른 처리 --> 스위치\n\nexport default function (state={}, action) {\n    switch (action.type) {\n        case LOGIN_USER:\n            return {...state, loginSuccess: action.payload }\n            break;\n        case REGISTER_USER:\n            return {...state, registerSuccess: action.payload }\n            break;\n        default:\n            return state;\n    }\n}",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":6,"column":3,"nodeType":"63","messageId":"64","endLine":6,"endColumn":7},{"ruleId":"61","severity":1,"message":"65","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":33,"column":22,"nodeType":"68","messageId":"69","endLine":33,"endColumn":24},{"ruleId":"61","severity":1,"message":"70","line":3,"column":5,"nodeType":"63","messageId":"64","endLine":3,"endColumn":15},{"ruleId":"61","severity":1,"message":"71","line":3,"column":17,"nodeType":"63","messageId":"64","endLine":3,"endColumn":30},{"ruleId":"72","severity":1,"message":"73","line":6,"column":1,"nodeType":"74","endLine":17,"endColumn":2},{"ruleId":"75","severity":1,"message":"76","line":10,"column":13,"nodeType":"77","messageId":"78","endLine":10,"endColumn":19},{"ruleId":"75","severity":1,"message":"76","line":13,"column":13,"nodeType":"77","messageId":"78","endLine":13,"endColumn":19},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'LOGIN_USER' is defined but never used.","'REGISTER_USER' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation"]